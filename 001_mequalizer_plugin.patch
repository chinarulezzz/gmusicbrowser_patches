commit a40c489a39b44c20cca4f3c9f96df0bc2dd1b432
Author: chinarulezzz <s.alex08@mail.ru>
Date:   Wed Mar 8 11:04:50 2017 +0200

    plugins: add mequalizer plugin

diff --git a/gmusicbrowser.pl b/gmusicbrowser.pl
index f176a11..d0f5c14 100755
--- a/gmusicbrowser.pl
+++ b/gmusicbrowser.pl
@@ -6585,7 +6585,11 @@ sub PrefAudio
 	#equalizer
 	my $EQbut=Gtk2::Button->new(_"Open Equalizer");
 	$EQbut->signal_connect(clicked => sub { OpenSpecialWindow('Equalizer'); });
-	my $EQcheck=NewPrefCheckButton(use_equalizer => _"Use Equalizer", watch=>1, cb=>sub { SetEqualizer(active=>$::Options{use_equalizer}); });
+	my $EQcheck=NewPrefCheckButton(use_equalizer => _"Use Equalizer", watch=>1,
+		cb => sub {
+			$::Options{PLUGIN_MEQUALIZER_EQU_AVAIL} = $::Options{use_equalizer} ? 1 : 0;
+			SetEqualizer(active=>$::Options{use_equalizer});
+		});
 	$sg1->add_widget($EQcheck);
 	$sg2->add_widget($EQbut);
 	my $EQbox=Hpack($EQcheck,$EQbut);
diff --git a/gmusicbrowser_layout.pm b/gmusicbrowser_layout.pm
index 7e693dc..9159a6f 100644
--- a/gmusicbrowser_layout.pm
+++ b/gmusicbrowser_layout.pm
@@ -5415,6 +5415,14 @@ sub new
 	my $turnon= $self->{turnon}= Gtk2::Button->new(_"Turn equalizer on");
 	$turnon->signal_connect(clicked=> \&button_cb, 'turn_on');
 
+	my $turnoff = $self->{turnoff}= Gtk2::Button->new(_"Turn equalizer off");
+	$turnoff->signal_connect(clicked=> \&button_cb, 'turn_off');
+	my $save_preset = $self->{save_preset} = Gtk2::CheckButton->new(_"Append to current song");
+	$save_preset->signal_connect(clicked => sub {
+		::GMB::Plugin::MEQUALIZER::Save($_[0]->get_active);
+	});
+	$mainbox->pack_start($_,0,0,0) for $turnoff, $save_preset;
+
 	unless ($opt->{notoggle})
 	{	my $toggle= $self->{toggle}= Gtk2::ToggleButton->new;
 		$toggle->add(Gtk2::Image->new_from_stock('gtk-edit','menu'));
@@ -5477,6 +5485,8 @@ sub combo_changed_cb
 		return
 	}
 	::SetEqualizer(preset=>$current) if $current ne '';
+	$self->{save_preset}->set_active(0);
+	$::Options{PLUGIN_MEQUALIZER_EQU_PRESET} = $::Options{equalizer_preset};
 }
 sub button_cb
 {	my $self= ::find_ancestor($_[0],__PACKAGE__);
@@ -5497,6 +5507,13 @@ sub button_cb
 	}
 	elsif ($action eq 'turn_on')
 	{	::SetEqualizer(active=>1);
+		$self->{save_preset}->set_active(0);
+		$::Options{PLUGIN_MEQUALIZER_EQU_AVAIL} = 1;
+	}
+	elsif ($action eq 'turn_off')
+	{	::SetEqualizer(active=>0);
+		$self->{save_preset}->set_active(0);
+		$::Options{PLUGIN_MEQUALIZER_EQU_AVAIL} = 0;
 	}
 }
 
@@ -5572,6 +5589,15 @@ sub update_buttons
 		my $current= $self->{combo}->get_active_text;
 		$self->{rbutton}->set_sensitive(defined $current && exists $self->{presets}{$current});
 	}
+	if (my $s = Songs::Display($::SongID, 'version')) {
+		if ($s eq $::Options{equalizer_preset}) {
+			$self->{save_preset}->set_active(1);
+		} else {
+			$self->{save_preset}->set_active(0);
+		}
+	} else {
+		$self->{save_preset}->set_active(0);
+	}
 }
 
 package Layout::Equalizer;
diff --git a/plugins/mequalizer.pm b/plugins/mequalizer.pm
new file mode 100644
index 0000000..b73a8db
--- /dev/null
+++ b/plugins/mequalizer.pm
@@ -0,0 +1,91 @@
+# Copyright (C) 2017 chinarulezzz <s.alex08@mail.ru>
+#
+# This file is part of Gmusicbrowser.
+# Gmusicbrowser is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License version 3, as
+# published by the Free Software Foundation
+
+=for gmbplugin MEQUALIZER
+name    Mequalizer
+title   Set different equalizer settings for each song.
+desc    Use Equalizer (Audio/Use Equalizer/Open Equalizer) to (un)append equalizer options for all songs or each song.
+=cut
+
+package GMB::Plugin::MEQUALIZER;
+
+use strict;
+use warnings;
+use constant OPT => 'PLUGIN_MEQUALIZER_';
+use Data::Dumper;
+
+my $handle;
+
+::SetDefaultOptions(OPT,
+    EQU_PRESET   => undef,
+    EQU_AVAIL    => 0,
+);
+
+sub Save {
+    my $is_active = shift;
+    if ($is_active) {
+        # Do not replace/save if current equalizer preset eq file tag
+        warn "mequalizer: may be save?\n";
+        unless (Songs::Display($::SongID, 'version') eq
+                $::Options{equalizer_preset})
+        {
+            warn "mequalizer: Save tag\n";
+            Songs::Set($::SongID, version => $::Options{equalizer_preset});
+        }
+    }
+    else
+    {
+        # Erase tag only if tag exists in equalizer presets, and tag eq
+        # current equalizer preset
+        if (grep $_ eq Songs::Display($::SongID, 'version'), ::GetPresets) {
+            warn "mequalizer: may be erasing tag?\n";
+            if (Songs::Display($::SongID, 'version') eq
+                $::Options{equalizer_preset})
+            {
+                warn "mequalizer: yep, erasing tag\n";
+                Songs::Set($::SongID, version => "");
+            }
+        }
+    };
+}
+
+sub Start {
+    $handle = {};
+    ::Watch($handle, PlayingSong => \&SongChanged);
+}
+
+sub Stop {
+    ::UnWatch($handle, 'PlayingSong');
+}
+
+sub SongChanged {
+    return unless defined $::SongID;
+
+    my $preset = Songs::Display($::SongID, 'version');
+
+    if ($preset && exists $::Options{equalizer_presets}{$preset}) {
+        ::SetEqualizer(smart  => $preset);
+        ::SetEqualizer(active => 1);
+    } else {
+        ::SetEqualizer(smart  => $::Options{OPT.'EQU_PRESET'});
+        ::SetEqualizer(active => $::Options{OPT.'EQU_AVAIL'});
+    }
+}
+
+sub prefbox {
+    my $vbox = Gtk2::VBox->new(0, 2);
+    my $desc = Gtk2::Label->new(
+        _("!!!ATTENTION TORRENT USERS!!!\n".
+          "Plugin write equalizers option into songs Version tag.\n".
+          "So, the file hash will change, and torrent client will overwrite the file.\n".
+          "Equalizer settings will be lost.\n")
+      );
+    $vbox->pack_start($desc, 0, 0, 1);
+    return $vbox;
+}
+
+1
